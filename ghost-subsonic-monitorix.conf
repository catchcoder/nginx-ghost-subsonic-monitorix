server {
      listen 80;
      server_name catchcoder.zapto.org;
      return 301 https://$server_name$request_uri;
}

server {
      listen 443 ssl http2;
      server_name catchcoder.zapto.org;
      ssl_certificate 
/etc/letsencrypt/live/catchcoder.zapto.org/fullchain.pem;
      ssl_certificate_key 
/etc/letsencrypt/live/catchcoder.zapto.org/privkey.pem;
      ssl_session_timeout 1d;
      ssl_session_cache shared:SSL:50m;
      ssl_session_tickets off;
    # modern configuration. tweak to your needs.
    ssl_protocols TLSv1.2;
    ssl_ciphers 
'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;
    # HSTS (ngx_http_headers_module is required) 
    # (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;
    # OCSP Stapling --- fetch OCSP records from URL 
    # in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;
 
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    rewrite ^/home.view$ /subsonic/home.view permanent;


location ~ /.well-known/acme-challenge {
                root /var/www/ghost/;
                allow all;
        }

              
location /subsonic/ {
    proxy_set_header HOST $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    rewrite ^/subsonic/(.*)$ /subsonic/$1 break; 
    proxy_pass http://127.0.0.1:4040/subsonic/;
    }


location /nginx_status {
          stub_status on;
          access_log   off;
          allow 192.168.0.0/24;
          deny all;
        }

location /monitorix/  {
    allow 192.168.0.0/24;
    deny all;
    proxy_set_header HOST $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    rewrite ^/monitorix/(.*)$ /monitorix/$1 break; 
    proxy_pass http://127.0.0.1:8080/monitorix/;
 
}

location /monitorix-cgi/  {
    allow 192.168.0.0/24
    deny all;
    proxy_set_header HOST $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    rewrite ^/monitorix-cgi/(.*)$ /monitorix-cgi/$1 break; 
    proxy_pass http://127.0.0.1:8080/monitorix-cgi/;
 
}


location / {
    proxy_set_header HOST $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-NginX-Proxy true;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #rewrite ^/blog/(.*)$ /$1 break;
    proxy_pass http://127.0.0.1:2368;
    proxy_redirect off;
    }

}

